@page "/forgotpassword"
@using BTB.Client.Models
@using BTB.Client.Models.Validation
@inject HttpClient Http
@layout LoginLayout

<div class="container">
    <EditForm Model="@_formModel" OnValidSubmit="HandleSubmitAsync" OnInvalidSubmit="HandleInvalidSubmit">
        <FluentValidator Validator="_validator" />

        <div class="text-center">
            <h3>Forgot Password</h3>
        </div>
        <br />
        <div class="form-group row">
            <label for="email" class="col-sm-3 col-form-label">Email</label>
            <div class="col-sm-9">
                <InputText @bind-Value="_formModel.Email" type="email" class="form-control form-control-sm" id="email" placeholder="User email" />
                <ValidationMessage For="@(() => _formModel.Email)" style="font-size:14px; margin-bottom:10px" />
            </div>
        </div>

        <div class="text-center">
                <p>@_info</p>
        </div>

        <div class="justify-content-around row">
            <div class="text-center">
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </div>
    </EditForm>
</div>


@code {

    private string _info;

    private ForgotPasswordModel _formModel = new ForgotPasswordModel();
    private ForgotPasswordModelValidator _validator = new ForgotPasswordModelValidator();

    public async Task HandleSubmitAsync()
    {
        _info = "";
        try
        {
            await Http.SendJsonAsync(HttpMethod.Post, $"/api/authorize/sendresetlink", _formModel);
        }
        catch (Exception)
        {

        }
        finally
        {
            _info = "If this email is in the database, a password reset link has been sent.";
        }
    }

    public void HandleInvalidSubmit()
    {
        _info = "";
    }

}
