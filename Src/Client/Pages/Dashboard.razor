@page "/"
@using BTB.Domain.Entities
@inject HttpClient Http
<h1>Dashboard</h1>

@if (_topList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Symbol</th>
                <th>Price</th>
                <th>Subscribe</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in _topList)
            {
                <tr>
                    <td><NavLink href="@($"/details/{@item.Symbol}")">@item.Symbol</NavLink></td>
                    <td>@Math.Round(item.LastPrice, 6)</td>
                    <td><button type="button" class="btn btn-primary" @onclick="@(()=> HandleOnSelected(@item.Symbol))">Subscribe</button></td>
                </tr>
            }
        </tbody>
    </table>

    <AlertSubscription turnOn="@HandleOnSelected" Symbol="@_actualSymbol" ToggleModal="@_popUpStyle"></AlertSubscription>
}

@code {
    private IEnumerable<BinanceSymbolPrice> _topList { get; set; }

    private static string _turnOffStyle = "none";
    private static string _turnOnStyle = "block";

    private string _actualSymbol;
    private string _popUpStyle = _turnOffStyle;


    private void HandleOnSelected(string symbol)
    {
        _actualSymbol = symbol;
        _popUpStyle = _turnOnStyle;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        _topList = await Http.GetJsonAsync<IEnumerable<BinanceSymbolPrice>>(@"api/dashboard/");
    }

}
