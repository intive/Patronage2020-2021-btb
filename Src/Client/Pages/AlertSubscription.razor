@inject HttpClient Http
@inject Blazored.Modal.Services.IModalService Modal
@using Dto
    <EditForm Model="@_alertDto" OnValidSubmit="CreateAlert">

        <p class="modal-title">Create Alert on @_symbol</p>

        <p>Symbol: @_symbol</p>

        <div class="form-group row mb-0">
            <label for="condition" class="col col-form-label">Select condition:</label>
            <div class="col">
                <InputSelect @bind-Value="_alertDto.Condition" class="form-control form-control-sm" id="condition">
                    <option disabled selected> -- select -- </option>
                    <option value="crossing">Crossing</option>
                </InputSelect>
            </div>
        </div>
        <ValidationMessage For="@(()=>_alertDto.Condition)" class="text-center mb-1" style="font-size:14px; margin-bottom:10px" />


        <div class="form-group row mb-0">
            <label for="valueType" class="col col-form-label">Select value type:</label>
            <div class="col">
                <InputSelect @bind-Value="_alertDto.ValueType" class="form-control form-control-sm" id="valueType">
                    <option disabled selected> -- select-- </option>
                    <option value="volume">Volume</option>
                    <option value="price">Price</option>
                    <option value="tradeCount">Trade Count</option>
                </InputSelect>
            </div>
        </div>
        <ValidationMessage For="@(()=>_alertDto.ValueType)" class="text-center mb-1" style="font-size:14px; margin-bottom:10px" />


        <div class="form-group row mb-0">
            <label for="value" class="col-4 col-form-label">Value:</label>
            <div class="col-8">
                <InputNumber @bind-Value="_alertDto.Value" class="form-control form-control-sm" id="value" />
            </div>
        </div>
        <ValidationMessage For="@(()=>_alertDto.Value)" class="text-center mb-1" style="font-size:14px; margin-bottom:10px" />


        <div class="form-group row mb-0">
            <div class="col">
                <span>Alert Actions:</span>
                <div class="col offset-sm-2 float-right">
                    <InputCheckbox @bind-Value="_alertDto.SendEmail" id="sendEmail" />
                    <span>Send Email</span>
                </div>
            </div>
        </div>

        <div class="form-group row mb-0">
            <label for="email" class="col-4 col-form-label">Email:</label>
            <div class="col-8">
                <InputText @bind-Value="_alertDto.Email" type="email" class="form-control form-control-sm" id="email" placeholder="Email" />
            </div>
        </div>
        <ValidationMessage For="@(()=>_alertDto.Email)" style="font-size:14px; margin-bottom:10px" />

        <div class="form-group row mb-1">
            <label for="message" class="col-4 col-form-label">Message:</label>
            <div class="col-8">
                <InputTextArea @bind-Value="_alertDto.Message" class="form-control form-control-sm" id="message" />
            </div>
        </div>
        <ValidationMessage For="@(()=>_alertDto.Message)" style="font-size:14px; margin-bottom:10px" />


        <DataAnnotationsValidator />

        <div class="text-right">
            <button class="btn btn-danger btn-sm" type="reset" @onclick="Close">Cancel</button>
            <button class="btn btn-success btn-sm" type="submit">Create</button>
        </div>

    </EditForm>

@code {

    [CascadingParameter]
    public ModalParameters Parameters { get; set; }
    private string _symbol;

    private AlertDto _alertDto = new AlertDto();

    protected override void OnInitialized()
    {
        _symbol = Parameters.Get<string>("Symbol");
    }

    protected async void CreateAlert()
    {
        _alertDto.Symbol = _symbol;
        await Http.SendJsonAsync(HttpMethod.Post, "/api/alerts/new", _alertDto);
        Modal.Close();
    }

    private void Close()
    {
        Modal.Close();
    }
}
