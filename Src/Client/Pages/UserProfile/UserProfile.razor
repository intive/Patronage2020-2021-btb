@page "/userprofile"
@using BTB.Client.Pages.Dto;
@using BTB.Client.Components.Dashboard;
@using Newtonsoft.Json;
@using BTB.Client.Pages.UserProfile.Enums
@using BTB.Client.Pages.Dashboard.Common
@inject HttpClient Http



<SpinLoader IsLoading="@_processingHttpRequest">
    <LoadingTemplate>
        <div class="d-flex" style="height: 75vh">
            <TimedLoader ShowDelay="500" />
        </div>
    </LoadingTemplate>
    <ContentTemplate>
        <div class="container jumbotron">
            @if (_userProfileInfo != null)
            {
                <div class="text-center">
                    <h1>@_userProfileInfo.Username</h1>
                </div>

                <div class="container">
                    <div class="row">
                        <h4 class="col-12 col-lg-3 col-xl-3">
                            Profile Bio
                        </h4>
                        <p class="col-12 col-lg-9 col-xl-9 text-break">
                            @GetMessageIfNullOrEmpty(_userProfileInfo.ProfileBio, "No profile bio was provided.")
                        </p>
                    </div>

                    <div class="row">
                        <h4 class="col-12 col-lg-3 col-xl-3">
                            Favourite trading pair
                        </h4>
                        <p class="col-12 col-lg-9 col-xl-9 text-break">
                            @GetMessageIfNullOrEmpty(_userProfileInfo.FavouriteTradingPair, "No favourite trading pair was provided.")
                        </p>
                    </div>

                    <div class="text-center">
                        <a class="btn btn-primary" href="/editprofile">Edit Profile</a>
                    </div>
                </div>
            }
            else
            {
                <div class="text-center">
                    <h1>Your profile is not yet configured, click the button below!</h1>
                </div>

                <div class="text-center">
                    <a class="btn btn-primary" href="/editprofile">Edit Profile</a>
                </div>
            }
        </div>
        <div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
            <div class="btn-group" role="group" aria-label="Table">
                <a href="#" role="button" class="btn btn-success btn-xs" id="label-btn" aria-disabled="true">Current view</a>
                <button type="button" class="btn btn-primary" @onclick="@(() => _currentUserProfileView = CurrentUserProfileView.Alerts)">Alerts</button>
                <button type="button" class="btn btn-primary" @onclick="@(() => _currentUserProfileView = CurrentUserProfileView.Favorites)">Favorites</button>
            </div>
        </div>
        @if (_currentUserProfileView == CurrentUserProfileView.Favorites)
        {
            <br/>
            <DashboardBody Type="DashboardType.FavoriteSymbolPair" />
        }
        else if (_currentUserProfileView == CurrentUserProfileView.Alerts)
        {
            <UserAlertsComponent />
        }
    </ContentTemplate>
</SpinLoader>

@code {

    private UserProfileInfoDto _userProfileInfo = null;
    private bool _processingHttpRequest = true;
    private CurrentUserProfileView _currentUserProfileView = CurrentUserProfileView.Favorites; 

    protected override async Task OnInitializedAsync()
    {
        var response = await Http.GetAsync($"api/userprofile");
        if (response.IsSuccessStatusCode)
        {
            string jsonString = await response.Content.ReadAsStringAsync();
            _userProfileInfo = JsonConvert.DeserializeObject<UserProfileInfoDto>(jsonString);
        }

        _processingHttpRequest = false;
    }

    private string GetMessageIfNullOrEmpty(string content, string message)
    {
        if (string.IsNullOrEmpty(content))
        {
            return message;
        }

        return content;
    }
}
